THREE.Vector3.prototype.isZero=function(v){return this.lengthSq()<(v!==undefined?v:0.0001)};THREE.Vector3.prototype.addSelf=function(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;return this};THREE.Vector3.prototype.subSelf=function(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;return this};THREE.PinHelper=function(dir,origin,length,color,headLength,headWidth,headColor){THREE.Object3D.call(this);this.type="PinHelper";this.headRate=5;if(color===undefined){color=255}if(length===undefined){length=112.5}if(headLength===undefined){headLength=length/this.headRate}if(headWidth===undefined){headWidth=length/this.headRate}if(headColor===undefined){headColor=11776947}this.lineHeight=1.2;var lineGeometry=new THREE.CylinderBufferGeometry(3,0.1,this.lineHeight,72,1);lineGeometry.translate(0,this.lineHeight/2,0);var coneRadius=0.7;var coneGeometry=new THREE.SphereBufferGeometry(coneRadius);coneGeometry.translate(0,-coneRadius,0);this.length=length;this.headLength=headLength;this.headWidth=headWidth;this.headScale=this.length/112.5;this.position.copy(origin);this.line=new THREE.Mesh(lineGeometry,new THREE.MeshStandardMaterial({color:headColor}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new THREE.Mesh(coneGeometry,new THREE.MeshStandardMaterial({color:color}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength()};THREE.PinHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.PinHelper.prototype.constructor=THREE.PinHelper;THREE.PinHelper.prototype.setDirection=(function(){var axis=new THREE.Vector3();var radians;return function setDirection(dir){if(dir.y>0.99999){this.quaternion.set(0,0,0,1)}else{if(dir.y<-0.99999){this.quaternion.set(1,0,0,0)}else{axis.set(dir.z,0,-dir.x).normalize();radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(axis,radians)}}}}());THREE.PinHelper.prototype.setLength=function(length,headLength,headWidth,scale){if(length===undefined){length=this.length}if(headLength===undefined){headLength=length/this.headRate}if(headWidth===undefined){headWidth=length/this.headRate}if(scale===undefined){scale=1}this.line.scale.set(scale,Math.max(0.1,length-headLength),scale);this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length*this.lineHeight;this.cone.updateMatrix()};THREE.PinHelper.prototype.setScale=function(scale){if(scale===undefined){scale=1}this.setLength(this.length*scale,this.headLength*scale*this.headScale,this.headWidth*scale*this.headScale,scale)};THREE.PinHelper.prototype.setColor=function(color){this.cone.material.color.copy(color)};THREE.PinHelper.prototype.setSize=function(length){this.length=length;this.headScale=this.length/112.5};THREE.LargePinHelper=function(dir,origin,color,length){if(length===undefined){length=112.5}this.length=length;this.headLength=20;this.headWidth=20;THREE.PinHelper.call(this,dir,origin,this.length,color,this.headLength,this.headWidth)};THREE.LargePinHelper.prototype=Object.assign(Object.create(THREE.PinHelper.prototype),{constructor:THREE.PinHelper});THREE.MidiumPinHelper=function(dir,origin,color){this.length=75;this.headLength=20;this.headWidth=20;THREE.PinHelper.call(this,dir,origin,this.length,color,this.headLength,this.headWidth)};THREE.MidiumPinHelper.prototype=Object.assign(Object.create(THREE.PinHelper.prototype),{constructor:THREE.PinHelper});THREE.SmallPinHelper=function(dir,origin,color){this.length=37;this.headLength=20;this.headWidth=20;THREE.PinHelper.call(this,dir,origin,this.length,color,this.headLength,this.headWidth)};THREE.SmallPinHelper.prototype=Object.assign(Object.create(THREE.PinHelper.prototype),{constructor:THREE.PinHelper});THREE.SuperSmallPinHelper=function(dir,origin,color){this.length=20;this.headLength=20;this.headWidth=20;THREE.PinHelper.call(this,dir,origin,this.length,color,this.headLength,this.headWidth)};THREE.SuperSmallPinHelper.prototype=Object.assign(Object.create(THREE.PinHelper.prototype),{constructor:THREE.PinHelper});THREE.ConeHelper=function(dir,origin,color,length){THREE.Object3D.call(this);this.type="ConeHelper";if(color===undefined){color=255}if(length===undefined){length=25}var lineRadius=25;this.lineHeight=2;var lineGeometry=new THREE.CylinderBufferGeometry(lineRadius,0.1,this.lineHeight,72,1);lineGeometry.translate(0,this.lineHeight/2,0);this.length=length;this.position.copy(origin);this.line=new THREE.Mesh(lineGeometry,new THREE.MeshLambertMaterial({color:color}));this.line.matrixAutoUpdate=false;this.add(this.line);this.setDirection(dir);this.setLength()};THREE.ConeHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ConeHelper.prototype.constructor=THREE.ConeHelper;THREE.ConeHelper.prototype.setDirection=(function(){var axis=new THREE.Vector3();var radians;return function setDirection(dir){if(dir.y>0.99999){this.quaternion.set(0,0,0,1)}else{if(dir.y<-0.99999){this.quaternion.set(1,0,0,0)}else{axis.set(dir.z,0,-dir.x).normalize();radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(axis,radians)}}}}());THREE.ConeHelper.prototype.setLength=function(length,scale){if(length===undefined){length=this.length}if(scale===undefined){scale=1}this.line.scale.set(scale,Math.max(0,length),scale);this.line.updateMatrix()};THREE.ConeHelper.prototype.setScale=function(scale){if(scale===undefined){scale=1}this.setLength(this.length*scale,scale)};THREE.ConeHelper.prototype.setColor=function(color){this.line.material.color.copy(color)};THREE.ConeHelper.prototype.setSize=function(length){this.length=length};THREE.CircleHelper=function(dir,origin,color,length){THREE.Object3D.call(this);this.type="CircleHelper";if(color===undefined){color=255}if(length===undefined){length=25}var coneRadius=0.5;var coneGeometry=new THREE.SphereBufferGeometry(coneRadius);this.length=length;this.position.copy(origin);this.cone=new THREE.Mesh(coneGeometry,new THREE.MeshLambertMaterial({color:color}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength()};THREE.CircleHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.CircleHelper.prototype.constructor=THREE.CircleHelper;THREE.CircleHelper.prototype.setDirection=(function(){var axis=new THREE.Vector3();var radians;return function setDirection(dir){if(dir.y>0.99999){this.quaternion.set(0,0,0,1)}else{if(dir.y<-0.99999){this.quaternion.set(1,0,0,0)}else{axis.set(dir.z,0,-dir.x).normalize();radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(axis,radians)}}}}());THREE.CircleHelper.prototype.setLength=function(length,scale){if(length===undefined){length=this.length}if(scale===undefined){scale=1}this.cone.scale.set(length,length,length);this.cone.updateMatrix()};THREE.CircleHelper.prototype.setScale=function(scale){if(scale===undefined){scale=1}this.setLength(this.length*scale,scale)};THREE.CircleHelper.prototype.setColor=function(color){this.cone.material.color.copy(color)};THREE.CircleHelper.prototype.setSize=function(length){this.length=length};THREE.FileLoader.prototype.load=function(url,onLoad,onProgress,onError){if(url===undefined){url=""}if(this.path!==undefined){url=this.path+url}var scope=this;var cached=THREE.Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad){onLoad(cached)}scope.manager.itemEnd(url)},0);return cached}var dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;var dataUriRegexResult=url.match(dataUriRegex);if(dataUriRegexResult){var mimeType=dataUriRegexResult[1];var isBase64=!!dataUriRegexResult[2];var data=dataUriRegexResult[3];data=window.decodeURIComponent(data);if(isBase64){data=window.atob(data)}try{var response;var responseType=(this.responseType||"").toLowerCase();switch(responseType){case"arraybuffer":case"blob":response=new ArrayBuffer(data.length);var view=new Uint8Array(response);for(var i=0;i<data.length;i++){view[i]=data.charCodeAt(i)}if(responseType==="blob"){response=new Blob([response],{type:mimeType})}break;case"document":var parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case"json":response=JSON.parse(data);break;default:response=data;break}window.setTimeout(function(){if(onLoad){onLoad(response)}scope.manager.itemEnd(url)},0)}catch(error){window.setTimeout(function(){if(onError){onError(error)}scope.manager.itemError(url)},0)}}else{if(window.aglocalforage){aglocalforage.getItem(url).then(function(value){if(value!==null){THREE.Cache.add(url,value);if(onLoad){onLoad(value)}scope.manager.itemEnd(url)}else{var request=new XMLHttpRequest();request.open("GET",url,true);request.addEventListener("load",function(event){var response=event.target.response;THREE.Cache.add(url,response);if(this.status===200){aglocalforage.setItem(url,response).then(function(value){if(onLoad){onLoad(value)}scope.manager.itemEnd(url)}).catch(function(err){if(onError){onError(event)}scope.manager.itemError(url);console.error(err)})}else{if(this.status===0){console.warn("THREE.FileLoader: HTTP Status 0 received.");aglocalforage.setItem(url,response).then(function(value){if(onLoad){onLoad(value)}scope.manager.itemEnd(url)}).catch(function(err){if(onError){onError(event)}scope.manager.itemError(url);console.error(err)})}else{if(onError){onError(event)}scope.manager.itemError(url)}}},false);if(onProgress!==undefined){request.addEventListener("progress",function(event){onProgress(event)},false)}request.addEventListener("error",function(event){if(onError){onError(event)}scope.manager.itemError(url)},false);if(this.responseType!==undefined){request.responseType=this.responseType}if(this.withCredentials!==undefined){request.withCredentials=this.withCredentials}if(request.overrideMimeType){request.overrideMimeType(this.mimeType!==undefined?this.mimeType:"text/plain")}request.send(null)}}).catch(function(err){if(onError){onError(event)}scope.manager.itemError(url);console.error(err)})}else{var request=new XMLHttpRequest();request.open("GET",url,true);request.addEventListener("load",function(event){var response=event.target.response;THREE.Cache.add(url,response);if(this.status===200){if(onLoad){onLoad(response)}scope.manager.itemEnd(url)}else{if(this.status===0){console.warn("THREE.FileLoader: HTTP Status 0 received.");if(onLoad){onLoad(response)}scope.manager.itemEnd(url)}else{if(onError){onError(event)}scope.manager.itemError(url)}}},false);if(onProgress!==undefined){request.addEventListener("progress",function(event){onProgress(event)},false)}request.addEventListener("error",function(event){if(onError){onError(event)}scope.manager.itemError(url)},false);if(this.responseType!==undefined){request.responseType=this.responseType}if(this.withCredentials!==undefined){request.withCredentials=this.withCredentials}if(request.overrideMimeType){request.overrideMimeType(this.mimeType!==undefined?this.mimeType:"text/plain")}request.send(null)}}scope.manager.itemStart(url);return request};THREE.OBJLoader.prototype.load=function(url,onLoad,onProgress,onError){var scope=this;this.__url=url;var loader=new THREE.FileLoader(scope.manager);loader.setPath(this.path);var request=loader.load(url,function(text){onLoad(scope.parse(text))},onProgress,onError);return request};